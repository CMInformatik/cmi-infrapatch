name: InfraPatch Github Action
description: A github action to update provider and module dependencies in terraform files
author: "Noah Canadea"
inputs:
  head_branch_name:
    description: "Source branch against which the PR will be created. Defaults to main"
    required: true
    default: ${{ github.ref_name }}
  target_branch_name:
    description: "Name of the branch where changes will be pushed to. Defaults to feature/infra-patch"
    required: true
    default: "feature/infra-patch"
  default_registry_domain:
    description: "Default registry domain to use for modules and providers without explicit registry domain set. Defaults to registry.terraform.io"
    required: false
    default: "registry.terraform.io"
  git_user:
    description: "Git user to use for commits. Defaults to InfraPatch Bot"
    required: false
    default: "InfraPatch Bot"
  git_email:
    description: "Git email to use for commits. Defaults to bot@infrapatch.ch"
    required: false
    default: "bot@infrapatch.ch"
  push_changes:
    description: "Push changes to the target branch. Defaults to true"
    required: false
    default: "true"
  github_token:
    description: "GitHub access token. Defaults to github.token."
    default: ${{ github.token }}
  report_only:
    description: "Only report new versions. Do not update files. Defaults to false"
    default: "false"
    required: true
  registry_secrets:
    description: "Registry secrets to use for private registries"
    required: false
    default: ""
  working_directory:
    description: "Working directory to run the command in. Defaults to the root of the repository"
    required: false
    default: ${{ github.workspace }}
runs:
  using: composite
  steps:
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      shell: bash

    - name: Create target branch
      id: create_branch
      if: ${{ inputs.report_only == 'false' }}
      uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        branch: "refs/heads/${{ inputs.target_branch_name }}"

    - name: Configure git
      if: ${{ inputs.report_only }} == 'false' }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        git config --global user.name "${{ inputs.git_user }}"
        git config --global user.email "${{ inputs.git_email }}"

    - name: Switch to target branch
      if: ${{ inputs.report_only == 'false' }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        git fetch origin
        git checkout -b "${{ inputs.target_branch_name }}" "origin/${{ inputs.target_branch_name }}"

    - name: Rebase target branch
      if: ${{ steps.create_branch.outputs.created == 'false' }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        git rebase -Xtheirs "origin/${{ inputs.head_branch_name }}"

    - name: Run InfraPatch Action
      shell: bash
      run: |
        module="infrapatch.action"
        arguments=()
        if [ "${{ runner.debug }}" == "1" ]; then
            arguments+=("--debug")
        fi
        if [ "${{ inputs.report_only }}" == "true" ]; then
            arguments+=("--report-only")
        fi
        if [ "${{ inputs.registry_secrets }}" != "" ]; then
            arguments+=("--registry-secrets-string" "\"${{ inputs.registry_secrets }}\"")
        fi
        arguments+=("--github-token" "${{ inputs.github_token }}")
        arguments+=("--working-directory" "${{ inputs.working_directory }}")
        arguments+=("--default-registry-domain" "${{ inputs.default_registry_domain }}")
        python -m "$module" "${arguments[@]}"

    - name: Push changes
      if: ${{ inputs.push_changes == 'true' }}
      working-directory: ${{ inputs.working_directory }}
      shell: bash
      run: |
        git push
