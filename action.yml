name: InfraPatch Github Action
description: A github action to update provider and module dependencies in terraform files
author: "Noah Canadea"
inputs:
  source_branch_name:
    description: "Source branch against which the PR will be created. Defaults to main"
    required: true
    default: "main"
  target_branch_name:
    description: "Name of the branch where changes will be pushed to. Defaults to feature/infra-patch"
    required: true
    default: "feature/infra-patch"
  default_registry_domain:
    description: "Default registry domain to use for modules and providers without explicit registry domain set. Defaults to registry.terraform.io"
    required: false
    default: "registry.terraform.io"
  push_changes:
    description: "Push changes to the target branch. Defaults to true"
    required: false
    default: "true"
  github_token:
    description: "GitHub access token. Defaults to github.token."
    default: ${{ github.token }}
  report_only:
    description: "Only report new versions. Do not update files. Defaults to false"
    default: "true"
    required: true
  registry_secrets:
    description: "Registry secrets to use for private registries"
    required: false
    default: ""
  working_directory:
    description: "Working directory to run the command in. Defaults to the root of the repository"
    required: false
    default: ${{ github.workspace }}
runs:
  using: composite
  steps:
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      shell: bash

    - name: Run InfraPatch Action
      shell: bash
      run: |
        module="infrapatch.action"
        arguments=()
        if [ "${{ runner.debug }}" == "1" ]; then
            arguments+=("--debug")
        fi
        if [ "${{ inputs.report_only }}" == "true" ]; then
            arguments+=("--report-only")
        fi
        arguments+=("--action" "test")
        arguments+=("--debug" "${{ runner.debug }}")
        arguments+=("--report-only" "${{ inputs.report_only }}")
        arguments+=("--github-token" "${{ inputs.github_token }}")
        arguments+=("--source-branch" "${{ inputs.source_branch_name }}")
        arguments+=("--target-branch" "${{ inputs.target_branch_name }}")
        arguments+=("--registry-secrets" "${{ inputs.registry_secrets }}")
        arguments+=("--working-directory" "${{ inputs.working_directory }}")
        arguments+=("--default-registry-domain" "${{ inputs.default_registry_domain }}")
        echo "Running command: python $module ${arguments[@]}"
        python -m "$module" "${arguments[@]}"

    - name: Push changes
      if: ${{ inputs.push_changes == 'true' }}
      shell: bash
      run: |
        git push
